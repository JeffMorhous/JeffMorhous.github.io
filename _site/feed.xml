<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jeff Morhous</title>
    <description>Software Engineer Specializing in iOS. I write about programming, productivity, and occasionally tech.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 24 Jul 2020 23:44:38 -0400</pubDate>
    <lastBuildDate>Fri, 24 Jul 2020 23:44:38 -0400</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>My Favorite Productivity Tips</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;If a craftsman wants to do good work, he must first sharpen his tools. — Confucius&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In math words, productivity typically is units of output per unit of time. Talking about our own work that way makes us feel like machines, and is a bit too reductionist. When I think of productivity, I think about getting done what I &lt;em&gt;need&lt;/em&gt; to get done in time so that I can do what I &lt;em&gt;want&lt;/em&gt; to get done. However you define it, productivity matters to you whether you’re a student, knowledge worker, parent, landscaper, or anything in between.&lt;/p&gt;

&lt;p&gt;As a &lt;em&gt;freelancer&lt;/em&gt;, increasing my productivity has allowed me to increase the amount of money I can make per hour.&lt;/p&gt;

&lt;p&gt;As a &lt;em&gt;student&lt;/em&gt;, focusing on productivity ensures that I stay on top of my coursework while still enjoying the meaningful things in life, like walks in the woods with my girlfriend.&lt;/p&gt;

&lt;p&gt;So, I’ve compiled a list of my favorite productivity tips that I’ve discovered in the last few years, and I hope you find them as helpful as I have. — &lt;/p&gt;

&lt;h2 id=&quot;daily-highlight-&quot;&gt;Daily Highlight 🔍&lt;/h2&gt;

&lt;p&gt;This is concept is pretty new to me, and it comes from the book “Make Time” by Jake Knapp and John Zeratsky. They advocate for picking a single priority for the day and putting as much energy as possible into it. As someone who typically makes obsessively detailed lists for my days, this is a little bit odd to me — So of course I tried it out for myself.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1600/1*QR8pokk11W5EEBI0jOzgGA.jpeg&quot; alt=&quot;Reading “Make Time” with a view&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the book (which I cannot recommend enough), the authors explain that todo lists aren’t focused enough, and long term goals are too hard to measure progress towards. Whenever you sit down to do work, whatever that looks like for your occupation, you should &lt;strong&gt;write down the one thing that matters most to you for the time you’re about to spend.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’ve been doing this for about 2 weeks now, and it’s helped me in a few different ways. For one, it keeps me honest and focused on what matters most. I’m far less likely to get sucked into reading documentation when I know my highlight for the day is to “Finish Writing New Tests”. But beyond that, &lt;em&gt;it gives me greater satisfaction as I stop working for the day.&lt;/em&gt; Even if I miss some other todo items, it’s remarkably rewarding to set out what I accomplish to do.&lt;/p&gt;

&lt;p&gt;I definitely recommend setting a highlight at the beginning of your work/school times. If the concept interests you more, then you’d enjoy the book! &lt;em&gt;They don’t give me anything for saying that&lt;/em&gt; 🤷‍♂️&lt;/p&gt;

&lt;h2 id=&quot;deep-work-&quot;&gt;Deep Work 🤫&lt;/h2&gt;

&lt;p&gt;Cal Newport (there’s that name again 🤷‍♂️) says ‘Deep work’ is the ability to focus without distraction on a cognitively demanding task. He has a lot of things to say on the subject, so much so that he wrote a whole book about it. In the aptly titled “Deep Work” he argues that our constantly distracting digital tools stop us from getting meaningful work done in normal quantities.&lt;/p&gt;

&lt;p&gt;Essentially, the idea is that you do your best work when you’re completely focused on one thing for an extended period of time. If you say, need to write a 5 page paper, that’s deep work. Checking your email however, is “shallow work.” In the past, I’ve broken down tasks like writing a 5 page paper into small intervals to make it manageable, but this often leads to lost time and a lower quality product, as your brain is spending too much time going in and out of the deep work “zone.”&lt;/p&gt;

&lt;p&gt;The best way to approach something with deep work, is to schedule some time for it, a process called “time blocking,” and then focus on that thing, eliminating distractions like notifications or meetings.&lt;/p&gt;

&lt;p&gt;There’s a pretty cool startup called Clockwise that produces a tool that will automatically rearrange your meetings (and subsequently, your colleague’s calendars) to allow you as large of a contiguous block of free time as possible to get deep work done.&lt;/p&gt;

&lt;p&gt;Here’s my favorite blog post that explains more on deep work&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://doist.com/blog/deep-work/&quot;&gt;&lt;strong&gt;Deep Work: The Complete Guide (Including a Step-by-Step Checklist)&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;pomodoro-&quot;&gt;Pomodoro ⏰&lt;/h2&gt;

&lt;p&gt;Pomodoro is my go-to strategy for getting myself moving when I &lt;em&gt;really&lt;/em&gt; don’t want to. Inertia extends beyond a force of nature and into our professional lives. If we’re already really productive, it tends to be nice and easy to do the next task. If we’ve been slugging around for a while, it can become incredibly hard just to get moving on that first thing. However, once most people get started, they find that getting past that initial friction is all they needed.&lt;/p&gt;

&lt;p&gt;Pomodoro relies on the inertia rule of productivity to get things done in short intervals with breaks as a reward system. The idea is you set a work timer, typically for 25 minutes, and focus on one task for the entire period. Then, you take a 5 minute break to be a sloth again and repeat as needed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Work for 25 minutes, take a five minute break.&lt;/strong&gt; If you do this twice, you will have accomplished 50 minutes of high quality work in just 1 hour, which is a win no matter how you look at it. This technique conflicts a bit with the philosophy of deep work given it advocates for short time periods, but it does protect your attention while you work, which is an absolute must. Most importantly, it gets you over that initial friction from getting started. It’s really hard to convince yourself to study for 4 hours, but it’s really easy to convince yourself to study for 25 minutes 🤔&lt;/p&gt;

&lt;h2 id=&quot;regular-sleep-&quot;&gt;Regular Sleep 😴&lt;/h2&gt;

&lt;p&gt;Sleep can make you more productive. It always seems like sleep can be a waste of time, right? I mean, to sleep 8 hours a night, we spend 1/3rd of our life &lt;em&gt;unconscious&lt;/em&gt;. How can that be productive?&lt;/p&gt;

&lt;p&gt;Thinking of sleep that way is a bit too reductionist. While we sleep, our brain does the necessary work to decompress, rest, and shift things from short term to long term storage.&lt;/p&gt;

&lt;p&gt;Not to mention the negative effects on your well-being, if you don’t sleep enough, or you sleep inconsistently, you will surely suffer professionally. I’ve found that sleeping 7–8 hours a night, every night, helps me to feel focused and healthy, freeing me to do my best work and enjoy life without having to make too many sacrifices.&lt;/p&gt;

&lt;p&gt;Don’t look at sleep as a waste of time, but look at it as the best way to take care of yourself.&lt;/p&gt;

&lt;h2 id=&quot;task-management-&quot;&gt;Task Management 👨‍🔬&lt;/h2&gt;

&lt;p&gt;Entire books have been written about task management, and dozens of applications are out there to help refine it. &lt;strong&gt;The single greatest benefit of keeping things you want and need to do in a written or digital system is the bandwidth it frees up in your mind&lt;/strong&gt;. Whenever a thought pops into my head, something like “Get a mothers day card for mom”, I throw it into my task app and my mind is free to resume doing real work. It seems tiny, but the pressure of trying to remember your responsibilities, no matter how large, can cost you &lt;em&gt;tons&lt;/em&gt; of time.&lt;/p&gt;

&lt;p&gt;Any approach to keeping your tasks under control is better than no approach, but I tend to go as organized as possible. I prefer apps over paper, so that I can always access it, and it’s easy to move things around. Specifically, I use Todoist, &lt;a href=&quot;http://jeffmorhous.com/how-i-use-todoist-to-organize-my-life-as-a-student/&quot;&gt;which I’ve written a whole article about.&lt;/a&gt; I throw things into the app as they come into my head, and at the beginning of every week I refine things to make sure each day is manageable in workload. I use the priorities feature to single out my highlight, a nod to my newest tip above.&lt;/p&gt;

&lt;p&gt;Even if a todo app wouldn’t help you with your &lt;em&gt;job&lt;/em&gt;, it will help you with your &lt;em&gt;life&lt;/em&gt;. Wouldn’t it be nice to be known as dependable?&lt;/p&gt;

&lt;h2 id=&quot;unplug-&quot;&gt;Unplug 🔌&lt;/h2&gt;

&lt;p&gt;This one seems obvious to me. Our minds are constantly stimulated, a condition that we’ve only faced for the last few decades. In his book, “Digital Minimalism,” Cal Newport advocates for a simple life free of constant digital distraction. Now, you don’t have to take all his advice, but a big takeaway is the &lt;strong&gt;mental benefit you receive from doing something outside of screens&lt;/strong&gt;, especially if all your work is done on a screen. This means, after a long day at the computer, watching TV isn’t necessarily the best option for your noggin.&lt;/p&gt;

&lt;p&gt;Things like going on a walk, cooking, and investing in meaningful relationships all pay huge dividends on your productivity. We’re not built to work all the time, so if you let your work or low-quality leisure consume your life, you’ll find yourself struggling to compete with (and less happy than) your peers who take time to unplug.&lt;/p&gt;

&lt;p&gt;If the thought of unplugging makes you nervous, it’s a good sign your brain needs that break even more.&lt;/p&gt;

&lt;h2 id=&quot;reading-&quot;&gt;Reading 📖&lt;/h2&gt;

&lt;p&gt;Reading gives you superpowers, simple as that. If you make reading a regular habit, your attention span will increase and strengthen, alongside your rapidly growing reading speed. Beyond that, you also absorb information from whatever you happen to be reading.&lt;/p&gt;

&lt;p&gt;Plenty of successful people make reading a priority in their life. Warren Buffet is known to spend 5–6 hours a day reading, while Bill Gates is known to pour through 50 books a year. When asked about his reading, Buffet said,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Read 500 pages like this every day. That’s how knowledge works. It builds up, like compound interest. All of you can do it, but I guarantee not many of you will do it.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Reading is a wonderfully relaxing and rewarding hobby that will push you towards success faster than any other.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If you’ve enjoyed this article, I’d love to hear from you! Likewise, you may like to hear from me. Throw your email my way, and I’ll (occasionally) send my writing about programming, productivity, and tech your way.&lt;/p&gt;

&lt;iframe scrolling=&quot;no&quot; style=&quot;width:100%!important;height:220px;border:1px #ccc solid !important&quot; src=&quot;https://buttondown.email/JeffMorhous?as_embed=true&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I won’t spam you, promise 🤝&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/my-favorite-productivity-tips/</link>
        <guid isPermaLink="true">http://localhost:4000/my-favorite-productivity-tips/</guid>
        
        
        <category>College</category>
        
        <category>Productivity</category>
        
      </item>
    
      <item>
        <title>How To Give Your ViewController An Activity Indicator</title>
        <description>&lt;p&gt;UIKit provides a nifty little spinning wheel we can display to the user when we’re waiting on something that the user can’t see. It’s considered a best practice to pop one of these up when doing something like a network call, so the person using our app isn’t clueless as to what’s going on. Basically, you create the spinner, and add it to your view. Then, just before a background task like an API request, tell it to animate. When the background request finishes, you just tell it to stop animating.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First, declare your spinner in the ViewController&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;var activityIndicator = UIActivityIndicatorView(style: .Large)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Inside viewDidLoad, or a method called by viewDidLoad, add the spinner to your view&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;activityIndicator.translatesAutoresizingMaskIntoConstraints = false
view.addSubview(activityIndicator)
activityIndicator.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive = true
activityIndicator.centerYAnchor.constraint(equalTo: view.centerYAnchor).isActive = **true**
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Before you make your background task, start the spinner&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;activityIndicator.startAnimating()
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;And when the background task completes, stop the spinner!&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;self.activityIndicator.stopAnimating()
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;This is such a small UI feature that has a huge benefit. If you implement it correctly, the people that use your app will probably never consciously notice it. But if you don’t implement this, users will likely feel like your app is slow, or mistake a normal wait time for a buggy freeze of the app. Hope you got some value out of this, I know your users will!&lt;/p&gt;
</description>
        <pubDate>Tue, 14 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/how-to-give-your-viewcontroller-an-activityindicator/</link>
        <guid isPermaLink="true">http://localhost:4000/how-to-give-your-viewcontroller-an-activityindicator/</guid>
        
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>How To Customize UITextView</title>
        <description>&lt;p&gt;So recently I’ve been working on an iOS version of my Mock My Words app. It’s pretty simple in functionality so I wanted to compensate with a nice user interface. The main functionality requires that a user enter (or paste) in text of pretty much any size. Oftentimes iOS text entry with a  &lt;strong&gt;UITextField&lt;/strong&gt;, but that only offers single line input. For multi-line input, you have to use  &lt;strong&gt;UITextView&lt;/strong&gt;  😔. After throwing that in my app I was rather unimpressed with how it looked. So, I decided to put my own spin on it. It took a bit of research and I’m pleased with how it turned out so I thought I’d share with the community on how customize the UITextView object to your own needs.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;create-the-uitextview&quot;&gt;Create the UITextView&lt;/h2&gt;

&lt;p&gt;I’m building this app programmatically, so the first step is to instantiate the UITextView object. If you’re using a storyboard, you’ll want to create an IBOutlet and then follow the other steps the same. I declared my UITextView at the class level of the view controller it’s used in, and the one-line looks like&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    **let** textBox = UITextView()
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Please note, all of the following code should be executed by  &lt;em&gt;viewdidload()&lt;/em&gt;&lt;/strong&gt;, but feel free to extract it to a function and then call that function from viewDidLoad()&lt;/p&gt;

&lt;h2 id=&quot;add-it-to-the-view&quot;&gt;Add it to the view&lt;/h2&gt;

&lt;p&gt;Next, you have to add it to the view hierarchy so it actually shows up. If you’re using a storyboard, skip this step.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    view.addSubview(textBox)textBox.translatesAutoresizingMaskIntoConstraints = **false**
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;set-the-delegate&quot;&gt;Set the delegate&lt;/h2&gt;

&lt;p&gt;If you actually want your app to react to actions the user may take, you need to make your view controller extend UITextViewDelegate, and then have the following line in your configuration.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    textBox.delegate = **self**
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;customize-the-textbox&quot;&gt;Customize the textbox&lt;/h2&gt;

&lt;p&gt;You can use creative freedom here, but here’s how I laid out my textbox view.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    textBox.autocorrectionType = .no
    textBox.text = placeholderText
    textBox.backgroundColor = .secondarySystemBackground
    textBox.textColor = .secondaryLabel
    textBox.font = UIFont.preferredFont(forTextStyle: .body)
    textBox.layer.cornerRadius = 20
    textBox.textContainerInset = UIEdgeInsets(top: 10, left: 10, bottom: 10, right: 10)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;give-it-a-shadow&quot;&gt;Give it a shadow&lt;/h2&gt;

&lt;p&gt;Again, this is optional, but this is how I gave my textbox a shadow so it has a material design feel.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    textBox.layer.shadowColor = UIColor.gray.cgColor;
    textBox.layer.shadowOffset = CGSize(width: 0.75, height: 0.75)
    textBox.layer.shadowOpacity = 0.4
    textBox.layer.shadowRadius = 20
    textBox.layer.masksToBounds = **false**
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tell-your-view-where-to-put-it&quot;&gt;Tell your view where to put it&lt;/h2&gt;

&lt;p&gt;Your method for doing this will definitely vary, but I used&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    NSLayoutConstraint.activate([insert your array of constraints here])
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that’s it! You have a custom textbox that kind of floats above the view you put it in.&lt;/p&gt;
</description>
        <pubDate>Fri, 15 May 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/how-to-customize-uitextview/</link>
        <guid isPermaLink="true">http://localhost:4000/how-to-customize-uitextview/</guid>
        
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>How to Set Up Programmatic Interfaces in iOS</title>
        <description>&lt;p&gt;There are plenty of valid reasons to use storyboards or to programmatically lay out your interface. Storyboards let us quickly build out a beautiful interface, but face limitations and scale problems. If you have a team working on an app, then Storyboards can get messy and hard to keep track of with version control. Once you decide that storyboards aren’t the tool for you, Xcode takes some tinkering to set things up to lay out your interface in Swift. After you create your project,&lt;/p&gt;

&lt;p&gt;First,  &lt;strong&gt;delete&lt;/strong&gt;  the  &lt;em&gt;Main.storyboard.&lt;/em&gt; Yup, delete it entirely.&lt;/p&gt;

&lt;p&gt;Then, we have to delete any reference to it- The first spot we need to take care of is the reference to  &lt;em&gt;Main.storyboard&lt;/em&gt;  in  &lt;em&gt;Info.plist&lt;/em&gt; — Go ahead and  &lt;strong&gt;delete the entry by clicking the minus sign&lt;/strong&gt;. The last place it’s referenced is in the  &lt;em&gt;Deployment Info&lt;/em&gt; section of your project settings. A dropdown for  &lt;em&gt;Main Interface&lt;/em&gt;  will still say Main.storyboard,  &lt;strong&gt;Select the empty option in the dropdown&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Next, add the following to your SceneDelegate.swift&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;guard let windowScene = (scene as? UIWindowScene) else { return }
window = UIWindow(frame: windowScene.coordinateSpace.bounds)
window?.windowScene = windowScene
window?.rootViewController = ViewController()
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, you can specify your actual layout in ViewController.swift!&lt;/p&gt;

&lt;p&gt;You’re all set up to implement the design of your dreams programmatically, and  &lt;a href=&quot;https://softauthor.com/ios-ui-design-programmatically-xcode-9-swift-4&quot;&gt;here’s a quick reference to help you get the hang of it&lt;/a&gt;!&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/how-to-set-up-programmatic-interfaces-in-ios/</link>
        <guid isPermaLink="true">http://localhost:4000/how-to-set-up-programmatic-interfaces-in-ios/</guid>
        
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>How to Wirelessly Test Your App on Your iPhone</title>
        <description>&lt;p&gt;A good thing to note is that the mac you are using Xcode on and the iPhone (or iPad) you want to test on  &lt;strong&gt;must be on the same network&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Next to the build button, go to select a device/simulator. Here, mine just says “&lt;em&gt;Generic iOS Device&lt;/em&gt;”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/2284/1*4iGsUqTlI2w8rJ5ILnOBOw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you click on it, select “&lt;em&gt;Add Additional Simulators&lt;/em&gt;” The result will be a modal that looks like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/3204/1*f5VkFuTfSE0pNmhsdPXmAA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Go ahead and switch over to devices. Plug your device in and unlock it, and it should appear.&lt;/p&gt;

&lt;p&gt;Go ahead and click the checkbox that says “&lt;em&gt;Connect via network&lt;/em&gt;” and voila!&lt;/p&gt;

&lt;p&gt;You may have to restart Xcode, but you should now be able to run your apps on your device without physically connecting it!&lt;/p&gt;

&lt;p&gt;This is a pretty small trick but it may save you tons of time, and honestly it’s just too cool not to set up. Hope this helped, and if you ran in to trouble, let me know below!&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/how-to-wirelessly-test-your-app-on-your-iphone/</link>
        <guid isPermaLink="true">http://localhost:4000/how-to-wirelessly-test-your-app-on-your-iphone/</guid>
        
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>Switching From Android To iPhone</title>
        <description>&lt;p&gt;I have used Android since roughly 2011, and would definitely classify myself as a fanboy. Now that I do quite a bit of iOS development for work, I finally made the jump over to using an iPhone full-time. Now that I’ve switched, I don’t know if I could ever go back. It’s not like I was completely oblivious to the iPhone before I switched — I’ve even been using an iPad for years and making iOS apps for quite some time. I’ve just been too reluctant to switch because I was so comfortable with my Android phone. In fact, the Galaxy S10e came out after the iPhone XR, so the iPhone XR is actually an older device! So what is it that makes me so pumped to now have an iPhone as my daily driver? 🤔&lt;/p&gt;

&lt;h1 id=&quot;big-name-apps-work-better&quot;&gt;Big-name apps work better&lt;/h1&gt;

&lt;p&gt;Apple definitely has a majority market share of smartphones in the US. So that means, companies with a focus on the United States have an incentive to put more resources into their iOS apps, as opposed to Android. I’ve always known this and been kind of annoyed as an Android user. Now that I’m using an iPhone, I’m starting to really appreciate it 🤩&lt;/p&gt;

&lt;p&gt;A lot of apps look and act exactly the same on both platforms, and hats off to those companies. However, a lot of smaller things come to the iPhone first, and their iPhone apps often end up being more polished than their Android counterparts. Shockingly enough, this is the most evident in banking/finance apps!&lt;/p&gt;

&lt;h1 id=&quot;things-just-work-like-magic&quot;&gt;Things just work like magic&lt;/h1&gt;

&lt;p&gt;Android’s open ecosystem is incredibly open and customizable. I’ve always loved this, and its one of the reasons I have stuck with it so long. However, this often results in manufactures or carriers making unnecessary changes to the OS for their own benefit (looking at you, Samsung). The Android software is built to fit an enormous range of hardware, and it’s begun to feel like a one-size-fits-none situation. Once I stopped being able to articulate what I specifically liked about Android over the iPhone, I decided to make the switch at least temporarily. I couldn’t be happier with the consistency of experience that Apple has provided.&lt;/p&gt;

&lt;p&gt;Creating software with hardware in mind, and vice versa has clearly evident benefits. I’ve been using the iPhone for a little over a week now, and haven’t experienced any crashes or even lag. Even FaceID works 100 times more consistently than its Android counterpart.&lt;/p&gt;

&lt;h1 id=&quot;the-emphasis-on-design-is-notable&quot;&gt;The emphasis on design is notable&lt;/h1&gt;

&lt;p&gt;I’m an engineer, so design isn’t exactly my strong suit.  I used to not even care about design, but the more I use computers and phones in my life, the more I want to actually &lt;em&gt;enjoy&lt;/em&gt; the experience.  This is especially magnified as I dive into a profession driven by creating positive software experiences for users.&lt;/p&gt;

&lt;p&gt;It’s become pretty apparent that Android is  &lt;em&gt;engineered and then designed&lt;/em&gt;, while iOS is  &lt;em&gt;designed and then engineered.&lt;/em&gt; Color schemes, animation, and even sounds have surprised me with the level of detail invested. iMessage is without a doubt the most obvious example of this, specifically with the whole screen effect features 🤯&lt;/p&gt;

&lt;p&gt;Beyond that, Emoji is just better. I used to never use emoji. Then I started using them on my mac because my girlfriend pointed out how much  &lt;em&gt;better they appeared&lt;/em&gt; than any other implementation I’ve seen. Emoji are supposed to communicate something better than text, and Apple really nails the fun element here!&lt;/p&gt;

&lt;h1 id=&quot;syncing-with-my-macbook-is-too-convenient&quot;&gt;Syncing with my MacBook is too convenient&lt;/h1&gt;

&lt;p&gt;Having iMessage on both my phone and my MacBook is a pretty novel feature. Not incredibly useful but definitely nice to be able to respond to texts in the middle of using my Computer without having switch devices.&lt;/p&gt;

&lt;p&gt;Airdropping between my phone and computer has been pretty great too! Being able to transfer documents, pictures, and even links back and forth without emailing them is a bit of a time saver.&lt;/p&gt;

&lt;p&gt;Just today, I got sent a link to a site that looked like garbage on mobile. All I had to do was open safari and click on the tab (from my MacBook) that was open on my iPhone, and ba-bam, I was in business on my MacBook.&lt;/p&gt;

&lt;p&gt;All of the syncing is definitely not perfect. There’s a bit of a lag between my phone and computer, and I’ve often had my computer be ringing after I already answered a call on my phone. But still, the sync between the 2 is pretty cool.&lt;/p&gt;

&lt;h1 id=&quot;privacy-&quot;&gt;Privacy 🔐&lt;/h1&gt;

&lt;p&gt;I’ll be honest, Apple’s stance on encryption is bold and attractive to me as a consumer. They’ve shown in public that they’re willing to stand up to even the government to protect their users’ information, and that’s priceless in a time where the economy runs on personal information. If you use an Android phone, you’re all but consenting to have Google track everything about you. A great side effect of shifting to the iPhone is the option for more choice over disclosure!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Making the switch from Android to the iPhone was a lot like my jump from Windows to Mac. It took me years to work up the guts but I’m definitely not regretting it. Yes, Apple charges significantly more for products that compare equally on a technical level. The “Apple Tax” is very real, and a barrier for many. If you’re trying to decide if that price jump is worth it for you, talk to some friends, and ask them what they like about their iPhone! Go into the Apple store and get hands-on with them 👨‍🔬&lt;/p&gt;
</description>
        <pubDate>Fri, 27 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/switching-from-android-to-iphone/</link>
        <guid isPermaLink="true">http://localhost:4000/switching-from-android-to-iphone/</guid>
        
        
        <category>Products</category>
        
      </item>
    
      <item>
        <title>How To Handle College at Home</title>
        <description>&lt;p&gt;Are you one of the tens of thousands of college students who’ve been displaced recently? Lots of people are talking, writing, and reading about their transmission to  &lt;em&gt;remote work&lt;/em&gt;, but not much has been said about  &lt;em&gt;remote learning.&lt;/em&gt; A lot of the same concepts apply, but a lot differs! I was actually homeschooled for 12 years, which involved some online classes, and a lot of self-direction. In college, I’ve already taken a few online classes. Even my job has been remote for quite some time, and now (like you, I’m assuming) I’m forced to finish out my entire academic semester online as well.&lt;/p&gt;

&lt;p&gt;I’m not super worried about the transition, solely because it doesn’t change my lifestyle all too much. There’s still some adjustment, mostly being back home and coordinating with my parents, one of which is also WFH (working from home) in this tense time. Being left to your own devices AND being locked in your house requires a ton of self-discipline, and can definitely get to you really fast. Everyone is different, but there are some things that I know help me to be as productive and healthy as I can when working remotely. Here are some tips that I hope help you be as successful as you can. Build strong habits early, and you’ll be thanking yourself when online exams roll around the corner 🥴&lt;/p&gt;

&lt;h1 id=&quot;recognize-the-situation&quot;&gt;Recognize the situation&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/2190/1*ex2Pfy4eGyvrhiaOqEEQ4Q.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There’s no doubt the world is hurting right now. You’re not alone. People everywhere are having their lives turned upside down. Remember, the world is not ending, but the steps we’re taking are indeed stopping it from ending.&lt;/p&gt;

&lt;p&gt;We’ve all had the rug pulled out from under us. Your professors and peers are all in the same boat as you. We didn’t sign up for this (well some did, but if you signed up for online classes to begin with you probably could write this article). Be patient with your faculty as they work to deliver you the education that you paid for. Be patient with yourself — it would be really unusual to be at your peak productivity during a time of worldwide crisis.&lt;/p&gt;

&lt;h1 id=&quot;create-a-space-for-school&quot;&gt;Create a space for school&lt;/h1&gt;

&lt;p&gt;Sure, watching lectures in bed and studying on the couch is sick and all(no pun intended), but it’s going to lead to devastating productivity losses. Some people can thrive wherever, but as we spend more and more time in our homes &lt;em&gt;a-la quarantine,&lt;/em&gt; it becomes increasingly important to remind your mind where work does and doesn’t happen. I work best in a closed room with a clean desk and an nice chair. But that’s not going to be possible for everyone all the time. Not everyone has a desk, I’m posted up at my parents kitchen table 👌. Just try your best to dedicate some physical space to your education, as it will certainly help you dedicate some mental space. Music and headphones are your friends for isolation, as it will help your drown out others sharing your school space.&lt;/p&gt;

&lt;h1 id=&quot;create-a-time-for-school&quot;&gt;Create a time for school&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/1212/1*umY_kJeLIXFkxDttK5iwyw.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This isn’t “spring break forever,” though it still feels like that. It’s really important that you dedicate time during your day to “lectures” in whatever form they’ll take, in addition to the obligatory studying and homework. Turn off your phone, shut the door if you can!&lt;/p&gt;

&lt;p&gt;Dedicating time to school will help you strike a healthy work-life balance. There’s no such thing as just leaving the tv on ‘in the background’ while you do practice exams. If you put your focus on school during the time you promised yourself you’d be doing it, your free time will be yours to spend entirely.&lt;/p&gt;

&lt;h1 id=&quot;use-a-planner&quot;&gt;Use a planner&lt;/h1&gt;

&lt;p&gt;Keeping track of online classes is stupid hard. Professors may or may not remind you of things that are due, and it’s certainly not their responsibility to keep you organized. Write everything down and prioritize your days. A lot of people find it easiest to do this digitally — I use Todoist,  &lt;a href=&quot;https://medium.com/swlh/how-i-use-todoist-to-organize-my-life-as-a-student-8c95d5597a1d?source=friends_link&amp;amp;sk=5cdc006415567f1db52f83684016fe1a&quot;&gt;and I already wrote a piece about how it helps me stay organized.&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;communicate-with-your-family&quot;&gt;Communicate with your family&lt;/h1&gt;

&lt;p&gt;If you’re at home for the long haul like me, this is going to take some adjusting for everyone. Be clear with them that you need undisturbed time to dedicate to your studies in order to succeed. It’s crazy hard to get deep work done if you’re constantly being interrupted, even if the interruptions are important. If you attention is absolutely need during your school time, help you family understand how to get that message across while still respecting your headspace.&lt;/p&gt;

&lt;h1 id=&quot;get-dressed&quot;&gt;Get Dressed&lt;/h1&gt;

&lt;p&gt;It’s easy to just lounge around in pajamas all day, and that’s totally fine. However, if you get up and get ready for the day like you were going to be out and about, it helps remind your mind that this isn’t a snow day. Hygiene and lifestyle habits will do wonders for your mental health!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;All of these tips not withstanding, remote work gives you the freedom to break these rules when needed. Use this wild pandemic to take advantage of the autonomy remote work offers. Who knows, you may discover that your top job desire is the opportunity for remote work.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Mar 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/how-to-handle-college-at-home/</link>
        <guid isPermaLink="true">http://localhost:4000/how-to-handle-college-at-home/</guid>
        
        
        <category>College</category>
        
      </item>
    
      <item>
        <title>How I Bombed a Microsoft Interview</title>
        <description>&lt;p&gt;So I’ve actually interviewed with Microsoft a couple of times. The first time I interviewed for a Software Engineering Internship, it was with a Microsoft engineer on my college campus. It was a great time, super challenging, and also terrifying. We talked very technically — it was your classic whiteboard interview.&lt;/p&gt;

&lt;p&gt;I was handed a piece of blank paper and asked to write code that performed a specific operation (can’t go into too much detail 🤫) on a binary search tree. The question was well beyond my skillset at the time, and I felt like I was drowning in sweat. After talking with the interview to clarify constraints, I walked him through the problem in several example graphs. This helped me approach my algorithmic solution, which I wrapped up with just minutes to spare. I was told that my feedback could be used for up to a year, so when recruiting opened up for the year, I would likely be pushed on to the next round (which for Microsoft, I believe is an on-site).&lt;/p&gt;

&lt;p&gt;Over the next several months, I studied like it was my job to ensure I wouldn’t be sweating through my shirt when I got the opportunity to interview again. I spent quality time with everyone’s favorite resources — Cracking The Coding Interview and Leetcode. I spent all of my preparation time preparing for questions like the one I had received that initial interview.&lt;/p&gt;

&lt;h2 id=&quot;but-then-my-recruiter-left-microsoft-&quot;&gt;&lt;strong&gt;But then my recruiter left Microsoft 😬&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;I was told by the new area recruiter that I’d have to submit my application and begin again. YIKES. Although I was bummed, it wasn’t the end of the world, and I applied again! I actually went a month or two without a reply, until I got ahold of someone internally who gave the new recruiter for my area a nudge. No hate on these recruiters though, their job is very challenging and I don’t envy the sheer amount of candidates they’re responsible for. Anyways, I was eventually contacted to schedule an initial phone screen!&lt;/p&gt;

&lt;p&gt;I prepared for this just like I had been all summer, leetcoding like it was my job. So you may not be surprised that this phone screen was not at all what I was expecting.&lt;/p&gt;

&lt;p&gt;The phone screen was  &lt;em&gt;not very technical.&lt;/em&gt;  It seemed like an initial get-to-know-you style call, to see if I was a real human being who could hold a conversation.  &lt;em&gt;Usually&lt;/em&gt;, I’m alright at that. But I was so caught off guard by the contrast of this to my first interview that  &lt;strong&gt;I choked, and I choked hard&lt;/strong&gt;. During that phone call, I was not a real human being who could hold a conversation.&lt;/p&gt;

&lt;p&gt;Almost immediately, he asked me the first question,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Why do you want to work at Microsoft?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wait, my last interview didn’t care what I thought about Microsoft??? He just wanted to see how comfortable I was with data structures! I wasn’t even kind of ready! This question is so fundamental to a job interview, I’m embarresed just thinking about how I struggled to respond.&lt;/p&gt;

&lt;p&gt;Yes, I  &lt;em&gt;thought&lt;/em&gt;  I wanted to work at Microsoft, but at that time, I couldn’t articulate why. Then next question came —&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;What’s your favorite Microsoft product, and what would you change about it?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I was sweating. I switched to Mac a few years ago, how did he know? 😩Thankfully I remembered that my IDE of choice, VS Code, is a Microsoft product! I love it and happily described how perfect it was. So needless to say I wasn’t prepared for him to ask “what I wanted to change about VS Code”. Change? I loved it!&lt;/p&gt;

&lt;p&gt;At this point I was really hoping that he would throw me a question that would allow me to show off my practiced binary tree knowledge. But yet again, another curveball was thrown my way.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tell me about a project where you used a data structure and algorithm&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;😩 I’ve done plenty of  &lt;em&gt;simple&lt;/em&gt; personal projects and plenty interview-style questions involving data structures and algorithms — but it immediately dawned on me that I never combined these two. My theoretical knowledge of algorithmic concepts was definitely siloed into the domain of interviewing. I struggled to describe how I used basic array sorts to populate iOS tableviews, and this definitely didn’t thrill my interviewer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The biggest mistake I made in this whole process&lt;/strong&gt;  was making a blanket assumption my “phone screen” would be exactly like my previous interview that Spring. I wasn’t prepared for a question as straightforward as “Why do you want to work here”!&lt;/p&gt;

&lt;p&gt;I didn’t over-prepare, I prepared for the wrong thing entirely. I assumed that I only had 1 area to improve in, and was proven sorely wrong.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Honestly, I probably wouldn’t have hired me after that call either. But this article isn’t a pity party for myself. It’s a reflection of what caused me to present myself so poorly. Yes, I failed this interview (with flying colors 🙃). But you can be assured that I won’t make that mistake again. Never again will I sit down for an interview (or even an info meeting) without internalizing my thoughts about the company and how I would contribute.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Success is stumbling from failure to failure with no loss of enthusiasm.”&lt;br /&gt;
―  &lt;strong&gt;Winston S. Churchill&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Thu, 27 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/how-i-bombed-a-microsoft-interview/</link>
        <guid isPermaLink="true">http://localhost:4000/how-i-bombed-a-microsoft-interview/</guid>
        
        
        <category>Tutorial</category>
        
        <category>College</category>
        
      </item>
    
      <item>
        <title>Interviewing For a Software Engineering Internship at Amazon</title>
        <description>&lt;p&gt;Why would I talk about Amazon when I’ve interviewed at more than a dozen companies? Well, it’s one of the most valuable and influential brands on planet earth — and software engineers are lining up at the door for a chance to join the team.&lt;/p&gt;

&lt;p&gt;The company boasts stellar compensation, benefits, and the opportunity to work on monumentally impactful code. Because of all this, it’s incredibly challenging to get a full-time role, let alone an internship. Plenty of candidates who are more than qualified get turned down, because the program is  &lt;em&gt;that selective&lt;/em&gt;! Their internships are among the most sought after in tech, and they’re hiring like crazy. Getting hired is a matter of persistence, hard work, and (unfortunately) luck.&lt;/p&gt;

&lt;p&gt;It’s important to note that the steps I outline here are the steps that I took, and your experience may vary a bit. What worked for me may not work for you, and vice versa. Also, I won’t go into verbose detail on the specifics of interview questions, as that would be unfair to Amazon and probably violate an NDA of some sorts.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-0-prepare&quot;&gt;Step 0: Prepare&lt;/h1&gt;

&lt;p&gt;You definitely don’t want to go into this blind, so the more time you have to prepare, the better. Once fall comes around though,  &lt;strong&gt;don’t delay applying.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You will get your choice for the most part on working with Java, Python, C, C#, or C++. Stick with your most comfortable language and become really proficient at using it to work with data structures.&lt;/p&gt;

&lt;p&gt;In the early stages of the interview process, knowing how to work with loops, arrays, and strings is vital. By the 3rd round however, you must be prepared to use more complicated data structures, like Sets, HashTables, and Queues.&lt;/p&gt;

&lt;p&gt;And while it doesn’t seem to be a huge deal in the assessments early on, understanding time and space complexity is a vital skill.&lt;/p&gt;

&lt;p&gt;There are plenty of free online resources to help you in becoming proficient with the types of questions Amazon will throw your way. My favorite practice tool is Leetcode, which has countless questions that have been seen in real interviews. Another popular resource is Hackerrank, which is a similar tool. If all of the data structures that I mentioned sound foreign to you, don’t fret! It’s probably best to begin with a more academic approach.  &lt;a href=&quot;https://www.amazon.com/gp/product/0984782850/ref=as_li_qf_asin_il_tl?ie=UTF8&amp;amp;tag=jeffmorhous-20&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=0984782850&amp;amp;linkId=4a78609fe0a47db374e1fe62e0fba8a4&quot;&gt;Cracking The Coding Interview&lt;/a&gt;  is my favorite book for preparing for interviews, and it comes with hundreds of practice problems.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-1-apply&quot;&gt;Step 1: Apply&lt;/h1&gt;

&lt;p&gt;You have 2 options here: you can apply cold, or you can try to find someone to refer you. I’ve gotten an interview at Amazon both ways, but when a friend was kind enough to refer me the second time around, I was offered the first pre-screen almost immediately.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The timeline you’re looking at is aggressive. For a summer internship, you’ll want to be sure to apply by  &lt;em&gt;October of the previous year.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Do your resume prep, find online resources and get feedback from peers and mentors! Once you’re ready, you can apply online. If you’re fortunate enough to have someone referring you, you’ll likely hear back within days. If not, there’s almost no telling. The first time I applied, I actually didn’t get pushed forward &lt;em&gt;until Spring&lt;/em&gt;  😅. The whole process took about a month for me, which feels like forever, especially when you’re excited!&lt;/p&gt;

&lt;p&gt;So the somewhat-obvious truth is that you don’t put all your eggs in one basket. Even if you’re the most qualified candidate on the planet, any company could pass you up for a number of reasons. Apply to dozens of other internships! After a few, it’ll become super natural and easy for you.&lt;/p&gt;

&lt;p&gt;Once you begin the assessment process, it is without a doubt in your best interest to complete them all as fast as possible. You wouldn’t want to go through all this effort only to miss a deadline, or worse — find out that they hired their max # of interns even though you finished the assessments in time.&lt;/p&gt;

&lt;h1 id=&quot;step-2-pre-screen-1-&quot;&gt;Step 2: Pre-Screen #1 🐛&lt;/h1&gt;

&lt;p&gt;If you pass the Resume screen, congrats!! The next step is typically a series of prescreens. To be respectful of your time, Amazon will send out the pre-screens in a series of progressively challenging stages. If you pass the first, you’ll get the second, and so on.&lt;/p&gt;

&lt;p&gt;You’ll get an email with some info on how to access and complete the pre-screen, and you’ll have under a week to execute. The assessment is online, and they’ll ensure you are working on your own by requiring access to record your camera, screen, and microphone.&lt;/p&gt;

&lt;p&gt;Without going into too much detail (wouldn’t want to spoil the fun 😉), you’ll spend most of your time finding and fixing bugs in code, already written in your choice Java, C++, or C. It can seem daunting at first but don’t get freaked out. I burned through 80% of my time before I even found my first bug, but once I spotted and fixed it, all of the others became immediately obvious to me. Most people try to overthink this stage, but it’s really just a test to see if you’re familiar with programming!&lt;/p&gt;

&lt;h1 id=&quot;step-3-pre-screen-2-&quot;&gt;Step 3: Pre-Screen #2 🤔&lt;/h1&gt;

&lt;p&gt;If you were able to fix “enough” of the bugs in the first assessment, you’ll get an email in a few days with instructions for the second. No one is quite sure what constitutes “enough.” I solved all of them, and I’ve heard of people getting pushed on having solved 75% of them.&lt;/p&gt;

&lt;p&gt;In this section, you’ll be asked to solve puzzle-like problems using your choice of Java, Python, C, C#, or C++ (Technical part of the interview). After a few of those, you’ll go through a “work-style” simulation, which constitutes the behavioral part of the interview.&lt;/p&gt;

&lt;p&gt;For this part, having a working answer seems to be more important than efficiency. Obviously, if you can do both, DO IT. But I only had time to implement brute force solutions that passed most (a few pesky ones trailed) of the test cases — and that still got me through!&lt;/p&gt;

&lt;p&gt;This stage has questions that match what Leetcode typically classifies as “medium” problems, and there will probably be about 3 of them. If you can quickly solve medium level problems on Leetcode, this will be no sweat for you. If you find them tricky, put in some practice and then give it your best shot!&lt;/p&gt;

&lt;h1 id=&quot;step-3-pre-screen-3-&quot;&gt;Step 3: Pre-Screen #3 ⏱&lt;/h1&gt;

&lt;p&gt;This last part is brutally long, at an estimated 2.5 hours to complete. It consists of a workday simulation and a logic test.&lt;/p&gt;

&lt;p&gt;The workday simulation is actually both fun and stressful. It’s very much made to be game-like while assessing how you perform under pressure. You’ll be presented with problems (like missing deadlines, buggy code, arrogant coworkers), and asked you how’d respond. It’s important that you’re honest, and if your responses line up with Amazon’s leadership principals, you’ll likely pass no problem.&lt;/p&gt;

&lt;p&gt;The last part is a logic test, which feels a lot like the ACT had a baby with a Mensa test. Likely designed to get a feel for  &lt;em&gt;how you think&lt;/em&gt;, the test is really hard to prepare for! If you really want to get a feel for what it’ll be like, practice with some fun Logic/IQ tests online.&lt;/p&gt;

&lt;h1 id=&quot;step-4-final-interview-&quot;&gt;Step 4: Final Interview 🙌&lt;/h1&gt;

&lt;p&gt;If you performed well enough on all 3 steps, a recruiter will likely reach out to schedule a phone interview! Even getting here is a great accomplishment, so congratulate yourself on a job well done.&lt;/p&gt;

&lt;p&gt;Ultimately, I turned down that final round interview because by that point, I had happily accepted an offer at another company. Once I knew that I wouldn’t be taking the job even if it was offered to me, I let the Recruiter know so as to respect their time. Amazon is a great company, but I ended up going somewhere that feels like a better fit for me.&lt;/p&gt;

&lt;p&gt;In all honesty, there’s no telling how I would have performed on that final interview! Because I didn’t follow through on the last stage of the interview, I won’t speak too much to it. I hear they typically ask one or two questions similar to the ones you saw in the second assessment. The biggest difference is that you’ll want to explain your design decisions to the interview to show an understanding of programming principals, rather than just cranking out code.&lt;/p&gt;

&lt;p&gt;Remember that the person you speak with  &lt;em&gt;wants&lt;/em&gt; to see you succeed, so don’t be intimidated. Ask lots of questions and don’t be afraid to say when you don’t know something!&lt;/p&gt;
</description>
        <pubDate>Sat, 15 Feb 2020 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/interviewing-for-a-software-engineering-internship-at-amazon/</link>
        <guid isPermaLink="true">http://localhost:4000/interviewing-for-a-software-engineering-internship-at-amazon/</guid>
        
        
        <category>Tutorial</category>
        
        <category>College</category>
        
      </item>
    
      <item>
        <title>Start a New Application with Vue.js and Vuetify</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://vuejs.org/v2/guide/&quot;&gt;&lt;strong&gt;Vue.js&lt;/strong&gt;&lt;/a&gt;  is an open source JavaScript framework created and maintained by a vibrant and passionate community. Although it’s  &lt;em&gt;relatively&lt;/em&gt; new to the web apps world, Vue is quickly gaining ground on the more popular alternatives, React and Angular.&lt;/p&gt;

&lt;p&gt;While remarkably useful, Vue.js by itself isn’t necessarily pretty. Sure, we could build out all the components we need, customizing CSS to fit our design patterns, but there’s a far easier way.  &lt;a href=&quot;https://vuetifyjs.com/en/&quot;&gt;&lt;strong&gt;Vuetify&lt;/strong&gt;&lt;/a&gt;  is a component framework that follows Material Design concepts. In short, it’s a massive UI library that plays really nicely with Vue. Things like forms, buttons, app bars, and even spinners can be used almost instantly, accelerating our front-end labor to an unbelievable pace. Beyond this, it all but ensures we’re following a consistent design pattern, which boosts our user experience!&lt;/p&gt;

&lt;p&gt;Now, let’s get down to it.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;step-0-optional-version-control-&quot;&gt;Step 0 (optional): Version Control 💪&lt;/h2&gt;

&lt;p&gt;It’s always a good idea to start version control when you start your project. Head over to github.com and create a new repository with whatever name you want. Click the “Initialize this repository with a README” button, then hit “Create Repository”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/60/1*aE4NJYbzLbjyh1wLBaQLcw.png?q=20&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/3616/1*aE4NJYbzLbjyh1wLBaQLcw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Creating a new repository on Github&lt;/p&gt;

&lt;p&gt;Next clone your repo either via SSH or HTTP from the command line with&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ git clone &amp;lt;the-link-github-provides&amp;gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In your terminal, move into the directory that just got cloned with&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ cd &amp;lt;my-repo-name&amp;gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you’re not familiar with git and want to be,  &lt;a href=&quot;http://jlord.us/git-it/&quot;&gt;“Git-it” is a wonderful tutorial&lt;/a&gt;  that runs you through most everything you’ll need to get started.&lt;/p&gt;

&lt;h2 id=&quot;step-1-install-vue-cli&quot;&gt;Step 1: Install Vue Cli&lt;/h2&gt;

&lt;p&gt;Vue CLI (command line interface) is by far the fastest and easiest way to create the scaffolding needed for a Vue.js project.&lt;/p&gt;

&lt;p&gt;There’s some  &lt;a href=&quot;https://cli.vuejs.org/guide/installation.html&quot;&gt;documentation on installing it here&lt;/a&gt;, but if you have npm installed already, it’s as simple as running the following in our terminal&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ npm install -g @vue/cli
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-2-create-vue-project&quot;&gt;Step 2: Create Vue Project&lt;/h2&gt;

&lt;p&gt;Now that we have the command line interface installed, to create a new project, we just need to run the following in the command line.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ vue create my-app
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You should replace “my-app” with your desired app name of course! You’ll be prompted for some customization options here, but I’ve always been happy with the defaults.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/60/1*lQVstwloZEP6oT1BOLqS6Q.png?q=20&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/4124/1*lQVstwloZEP6oT1BOLqS6Q.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fire up your code editor of choice. For most things,  &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;I use VS code&lt;/a&gt;. It’s lightweight and incredibly customizable, not to mention free, perfect for Vue.js development.&lt;/p&gt;

&lt;p&gt;You now have a functional Vue.js app created! This is a great place to commit 😃&lt;/p&gt;

&lt;h2 id=&quot;step-3-add-vuetify-&quot;&gt;Step 3: Add Vuetify 🔮&lt;/h2&gt;

&lt;p&gt;Move your working directory into the app that was just created with (of course, replace my-app with the name you gave the  &lt;em&gt;vue create&lt;/em&gt;  command)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ cd my-app
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, we can set up our app to use Vuetify by simply running the following command&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ vue add vuetify
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To see your new beautiful web app, run the start script (either yarn serve or npm run dev) and view it in your browser!&lt;/p&gt;

&lt;p&gt;Just like the command line tool recommends, this is a great place to commit your changes&lt;/p&gt;

&lt;h2 id=&quot;step-4-and-beyond-adding-components-and-customization&quot;&gt;Step 4 and Beyond: Adding Components and Customization&lt;/h2&gt;

&lt;p&gt;Now that you have Vuetify hooked up to Vue, adding crazy complex and appealing components is as easy as one liners. Go through the documentation and see what components might be useful to you. Take a look at the resources below to see what you can do. Actually getting components to do things is more of a Vue.js skill, so their docs and various tutorials will be helpful to you.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;resources-&quot;&gt;Resources 🧐&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://vuejs.org/v2/guide/&quot;&gt;The Vue.js Website and Docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://vuetifyjs.com/en/&quot;&gt;The Vuetify Website and Docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jlord.us/git-it/&quot;&gt;Git-it Tutorial&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/start-a-new-application-with-vuejs-and-vuetify/</link>
        <guid isPermaLink="true">http://localhost:4000/start-a-new-application-with-vuejs-and-vuetify/</guid>
        
        
        <category>Tutorial</category>
        
      </item>
    
  </channel>
</rss>
