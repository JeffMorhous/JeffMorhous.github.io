<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jeff Morhous</title>
    <description>Software Engineer Specializing in iOS. I write about programming, productivity, and occasionally tech.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 04 Jan 2021 00:06:46 -0500</pubDate>
    <lastBuildDate>Mon, 04 Jan 2021 00:06:46 -0500</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Should I Major in Computer Science?</title>
        <description>&lt;p&gt;I’m in my fourth year studying Computer Science (and Engineering 🤷‍♂️), and I’m certain this was the right move for me. But is a degree in Computer Science the right path for you? Is Computer Science a good major?&lt;/p&gt;

&lt;p&gt;For me, the decision was all but obvious once I eliminated some other career options — I love to build things, and I love to work with people. Working as a Software Engineer seems like a natural choice. The most common degree for people pursuing a career in Software Engineering is a B.S. in Computer Science, so that’s what I looked for!&lt;/p&gt;

&lt;h3 id=&quot;should-you-follow-your-passion&quot;&gt;Should you follow your passion?&lt;/h3&gt;

&lt;p&gt;Yes, and no. Following your passion is often dangerous, as Cal Newport argues in his book, “So Good They Can’t Ignore You.” A distinguished Professor of Computer Science and popular author, he argues that skills trump passion in the quest for work that matters.&lt;/p&gt;

&lt;p&gt;At the most basic level, we work for money. We used to have to hunt or grow our own food, fending for all of our most basic resources. Now, most of us specialize in more specific work, like carpentry, teaching, marketing, or programming. We trade our time and skills for money, which we trade for the things we want and need. You can talk all day about doing a job because we love it, but if the paycheck stopped coming, I’d bet you’d be looking for a job you loved &lt;em&gt;that payed you&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Even so, no person &lt;em&gt;wants&lt;/em&gt; to spend a giant portion of their life slaving away doing work they hate. We gravitate towards work that fulfills us. &lt;strong&gt;So to answer the question “Should I major in Computer Science,” you have to answer the question, “Will this lead me to a career that is fulfilling, stable, and financially attractive?”&lt;/strong&gt; Obviously, the answer varies — and I hope to help you find yours.&lt;/p&gt;

&lt;p&gt;Cal Newport follows up his denial of “Follow your passion” with the assertion that in order to find work that fulfills us, we need to first acquire rare and valuable skills, something he calls “Career capital.” You need to give employers or clients a reason to trust you with autonomy and pay you well, and for that, you need a track record of success. For some people, college is a great step to establishing that track record while acquiring those rare and valuable skills.&lt;/p&gt;

&lt;h3 id=&quot;will-you-enjoy-working-in-computer-science&quot;&gt;Will You Enjoy Working In Computer Science?&lt;/h3&gt;

&lt;p&gt;The easiest way to pick your major (and know if you even &lt;em&gt;need&lt;/em&gt; to go to college) is to decide on your career. Plenty of people find their career after they pick a school and major, and that’s just as valid. However, if you’re already considering Computer Science, narrowing down your desired occupation is a natural first step. Here’s a list of just 10 job titles people in Computer Science tend to gravitate to -&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Software Developer (or Engineer)&lt;/li&gt;
  &lt;li&gt;Database Administrator&lt;/li&gt;
  &lt;li&gt;Computer Hardware Engineer&lt;/li&gt;
  &lt;li&gt;Computer Hardware Engineer&lt;/li&gt;
  &lt;li&gt;Computer Hardware Engineer&lt;/li&gt;
  &lt;li&gt;Web Developer&lt;/li&gt;
  &lt;li&gt;Information Security Analyst&lt;/li&gt;
  &lt;li&gt;Computer and Information Research Scientists&lt;/li&gt;
  &lt;li&gt;Computer and Information Systems Managers&lt;/li&gt;
  &lt;li&gt;IT Project Manager&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If any of these roles interest you, you can &lt;a href=&quot;https://www.thebalancecareers.com/top-jobs-for-computer-science-majors-2059634&quot;&gt;find more information here&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;All of these titles are great places to start in your search for work that you’ll love, if you feel inclined to them. Even so, you’ll need to work hard and build a reputation for yourself before you reap most of the benefits of this “career capital.”&lt;/p&gt;

&lt;h3 id=&quot;do-you-like-to-code&quot;&gt;Do You Like To Code?&lt;/h3&gt;

&lt;p&gt;Not everyone who studies computer science is writing code all day. In fact, pretty much everyone will have to face more soft-skill oriented tasks, like participating in meetings and working with colleagues. However I’m pretty comfortable saying that if you don’t like computers, or the thought of sitting in front of a computer for most of your workday is dreadful, this probably isn’t the career you want.&lt;/p&gt;

&lt;p&gt;During my internships, I spent a lot of time writing code, but even more time working with teammates. Programming isn’t a solo sport, and that’s a good thing. So, if you’re great at working with people, and you don’t hate computers, give yourself a chance.&lt;/p&gt;

&lt;h3 id=&quot;what-if-youre-bad-at-math&quot;&gt;What If You’re Bad At Math?&lt;/h3&gt;

&lt;p&gt;Working in tech or software is one thing, but studying Computer Science is another. In my professional work, I pretty much never explicitly call on my math knowledge. An understanding of mathematics at an algebra level is likely enough for you to be able to write quality software, but it won’t make you a “Computer Scientist.”&lt;/p&gt;

&lt;p&gt;Any accredited Computer Science degree is going to require a ton of math. Like, enough math where it wouldn’t be much extra work to pick up a math minor. You don’t have to love math to succeed, I certainly don’t. In fact, I’m not even particularly good at math. I failed Calculus 3 actually — I had to take it again. I worked hard, filled gaps in my knowledge, and came out of it with an A. While that one failed course hurt my GPA, I honestly don’t believe it indicates that I’m any worse at my job. I view it as a learning experience, and a refinement of my work ethic. Math is really hard for me, and I work my butt off to get through it.&lt;/p&gt;

&lt;p&gt;When I graduate, I can move on from math. Sure, jobs will often you to understand Computer Science related math (things like graph theory, limits, and maybe even probability), but I believe employers value work ethic over natural ability.&lt;/p&gt;

&lt;p&gt;You do have to command an ability in analytical thinking though. Programming is just telling computers what to do, and that requires a firm grasp on logic. This is something that can be learned, but if you absolutely hate the idea of puzzles, logic, and problem solving, you’re starting at an incredible disadvantage.&lt;/p&gt;

&lt;p&gt;Hard work beats talent when talent fails to work hard. So no, don’t let not “being a math person” stop you from pursuing a career you want.&lt;/p&gt;

&lt;h3 id=&quot;what-about-other-majors&quot;&gt;What About Other Majors?&lt;/h3&gt;

&lt;p&gt;I decided on my major and on my school at the same time, and I would definitely recommend that to anyone who hasn’t graduated high school yet.&lt;/p&gt;

&lt;p&gt;If a career in software is exciting to you, you don’t exactly have to study Computer Science. In fact, a diverse background makes for a strong team, and if you can learn the technical skills on your own, a different major won’t work too much against you.&lt;/p&gt;

&lt;p&gt;It happens to be a bit easier to land an entry level job in software when you have a piece of paper that at least says, “I passed a lot of tests about skills this job requires,” so there is definitely value in studying relevant to the job you want.&lt;/p&gt;

&lt;h3 id=&quot;how-to-decide-if-cs-is-the-right-major&quot;&gt;How To Decide If CS Is The Right Major&lt;/h3&gt;

&lt;p&gt;I bet you came here looking for me to say “Yes you should major in CS”, or “No, you shouldn’t even go to college,” but I’m not going to do that. Sorry 🤷‍♂️&lt;/p&gt;

&lt;p&gt;Your career is an exceptionally personal journey, but it shouldn’t refine you. Figure out what’s important to you in work. Decide how you want your days to look. If that aligns with a job like Software Engineering, that’s great! It’s even better if some of your skills align with the job, like an aptitude for computers, programming experience, and analytical proficiency.&lt;/p&gt;

&lt;p&gt;Tech jobs are in very high demand, meaning you’ll posses &lt;em&gt;rare and valuable skills&lt;/em&gt; that will often translate to job security and financial rewards.&lt;/p&gt;

&lt;p&gt;There’s a huge shortage in computer science talent, which places a premium on these skills. For me, wearing a hoodie to work, or even working from my bedroom, are pretty much the best perks on the planet. Don’t even get me started on free food 😝&lt;/p&gt;

&lt;p&gt;Even if you do major in Computer Science, college won’t teach you everything you need to know. You need to be always learning and growing, even after you start your first ‘real’ job.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If this helped you, let me know! If you think it sucked, let me know why! And if you want to see more of my story, you can &lt;a href=&quot;https://twitter.com/JeffMorhous&quot;&gt;follow me on twitter&lt;/a&gt; or you can &lt;a href=&quot;https://iosbynight.substack.com/&quot;&gt;join my newsletter&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Jan 2021 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/should-I-major-in-computer-science/</link>
        <guid isPermaLink="true">http://localhost:4000/should-I-major-in-computer-science/</guid>
        
        
        <category>College</category>
        
      </item>
    
      <item>
        <title>Interview With a Self-Taught iOS Developer</title>
        <description>&lt;p&gt;Here’s the tweet that I’d been waiting for since I started following Frank back in April.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;BIG NEWS!!!: After 2 years of self study, 5 months of unemployment, a global pandemic, having 3 kids (two are twins!), 100+ applications and countless interviews I can finally say I’ve accepted my first job as a Mobile Software Engineer!!!! 🎉🥳 I FREAKING DID IT!!!! 🙌&lt;/p&gt;&amp;mdash; Frank Foster | #BlackLivesMatter (@frankefoster) &lt;a href=&quot;https://twitter.com/frankefoster/status/1302313561696301057?ref_src=twsrc%5Etfw&quot;&gt;September 5, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;Frank comes from an IT background, and landed an iOS development job in the middle of 2020. Heck of a year for a career change. About a month ago, he agreed to sit down with me and talk about his journey to becoming a Mobile Software Engineer, and his story is definitely worth sharing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What was the beginning of your career like? How did you break into tech without a degree?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I actually, funny enough, used to work at Apple. I was a genius at one of the Apple stores. I worked there for about 6 years, starting at sales and working my way up to genius, which is pretty much everything. Towards the end of my time there, I said “You know what, I need a change of pace, I’m going to start coding.” I poked around, initially looking at game development. I started off with all the worst preconceptions of how great I was gonna be, and found out very quickly — “Oh no, this is not easy.” It was super hard. I ended up switching to an IT job, and did that for about two years.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;I came across an opportunity from University of Idaho — they had partnered with Apple to offer free coding classes to the community, and they were looking for someone to run it. So I figured, “What better way to learn than by teaching!” That was in 2018, and I eventually left my IT job, and went to a better IT job at a pretty mature startup.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Shortly into the work-from-home stuff, the company I was working at was hit with layoffs. At this point, I’d been doing this teaching coding thing for a few years. I figured I either go back to another IT job, which I won’t enjoy, or I can jump into iOS development.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;So how did your job search start?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I had a few apps under my belt, but I still took a few months to study, work on my own apps, and work on my twitter, LinkedIn, and Resume. There’s definitely an element of being known, creating some legitimacy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;How does Twitter fit into your story?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Twitter went from this thing where I knew I had to do it for my career, to genuinely enjoying the community. That’s how I met you, and that’s how I met a number of people — I’ve even been to a couple twitter dev meetups!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;When did you start applying for a new job?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I probably started kicking off my applications about two months after I was laid off. I applied at probably 80–90 companies. My daily routine was just get up, go to LinkedIn and Indeed, and just apply constantly. I had 4 0r 5 interviews, and 3 of them I had a second round with. (Writers note, this is an awesome interview success rate. Frank rocks at interviewing)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;I really connected with the company I’m with now. Of all the opportunities I could have taken, I’m sure this is the best. There’s a ton of opportunity for me to grow.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;How did you get started learning?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I started with Apple’s “Everyone can Code” free materials, which is what Inspire Idaho was using as a curriculum. It kind of gave the ground level, and my class expanded on that to build out real apps. It’s important to pick something that you want to build, even if it’s super basic. Something like a button that changes a color can teach you a lot. I definitely tapped into Hacking With Swift, 100 Days of Swift, and everything that Paul Hudson has done. Building an app is really important. Realizing, I want to do ‘this’&lt;strong&gt;,&lt;/strong&gt; and then seeking out the resources and gaining the necessary knowledge to build it. I couldn’t list every tutorial I followed, or every Medium/Reddit/Blog/Stack Overflow post I read.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;How are you continuing to build on your foundation of knowledge?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Oh my gosh, dude, it’s a daily thing. One of the challenges I’m facing right now is learning dependency injection, and doing that on a deadline is a bit stressful. I’m on a small team, and my coworkers are amazing. My teammate has been taking time to bring me up to speed, but there’s still a lot I don’t know. You kind of have to take it as a learning opportunity, write down things to remember, and try to use new knowledge to solidify it. I might go a little bit slower than a coworker, but all the work I do gives me a building block to keep going. When you find the right company, you’re not less of an employee for having gaps in knowledge. Having open sourced projects on Github helps set expectations for companies going in too!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;What’s the best part of being an iOS Developer?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There’s a lot of great things! For most of my career, I’ve been in a customer-service type position, where I do things for customers. There’s only so many ways you can reset a password or replace a hard drive. You go from that, to being &lt;strong&gt;creative&lt;/strong&gt; with things. It definitely brings a new perspective, combining logic and design. We don’t have a UX Designer, so we get to build both sides of our app. I’m also a homebody, so being remote is fantastic!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Speaking of — how has remote work been for you?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I was actually kind of remote before this, I was pretty much the only IT person at my company’s site. I was in an office, but all my meetings and whatnot were on video call, so moving to completely at home has been no problem at all. I like being at home, I’m lucky enough to have a space that can be my office. I think it’s great — I like the fact that there isn’t someone on top of you cracking the whip, since I’ve had that kind of job before. Especially with coding, I think the isolation helps. To be able to put on some headphones and just focus is great. I’ve actually been thinking about buying some more pairs of sweatpants.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;What drew you to iOS over any other kind of development? Would you make the same decision if you could go back?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The big thing that drew me to it is that I’m a huge Apple fan. For all of their flaws, their philosophy of technology is what draws me to using it. In a very weird way, I started college for a music degree, and the Mac was the place to be in that scene. I was homeschooled, and my mom put a lot of schooling me. She was an artist, and that left a huge impact on me. Apples intersection of art and technology is super evident. If I could go back, I think I could do it again. There’s all sorts of products and technologies that you could learn, like game development, or the web, but I think for now iOS is the place to be.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;How do you feel about cross-platform stuff, like React Native? Would you ever switch into that?&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I don’t have a huge opinion because I haven’t used it enough. But I definitely believe in using the best technology for the job at hand. Knowing the hatred of React Native in a lot of the community, I do think that native code is better. You’re able to follow guidelines for that platform much closer, and your development time often ends up being faster anyways. Being as native as possible often gives the best experience for users, but it still depends on what you’re doing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;I hope you enjoyed reading about Frank’s story as much as I did writing it up for you. Thanks, Frank, for letting me talk about your story! You can &lt;a href=&quot;https://twitter.com/frankefoster&quot;&gt;find Frank on twitter&lt;/a&gt;, where he is an active member of the thriving tech community.&lt;/p&gt;

&lt;p&gt;You can also &lt;a href=&quot;https://twitter.com/JeffMorhous&quot;&gt;find me on twitter&lt;/a&gt;, or follow me here. If you want to be notified when I write something else, you can &lt;a href=&quot;https://iosbynight.substack.com/&quot;&gt;join my newsletter&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Dec 2020 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/interview-with-a-self-taught-ios-developer/</link>
        <guid isPermaLink="true">http://localhost:4000/interview-with-a-self-taught-ios-developer/</guid>
        
        
        <category>Interview</category>
        
      </item>
    
      <item>
        <title>Why You Can't Focus</title>
        <description>&lt;p&gt;Being able to devote your full attention to something is fundamental to thriving in any area of life, so why is it so hard?&lt;/p&gt;

&lt;p&gt;In Cal Newport’s cult-favorite “Deep Work”, he says&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The ability to perform deep work is becoming increasingly rare at exactly the same time it is becoming increasingly valuable in our economy. As a consequence, the few who cultivate this skill, and then make it the core of their working life, will thrive.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For the most part, “Deep Work” is putting all of our energy into one task, to accomplish something that can’t easily be replicated. Think of the last time you had to write a term paper, study for a math exam, or complete a deliverable at work. If you’re anything like me, you probably remember the constant negotiation with yourself to actually work on the task at hand. I often find myself wanting to reach for my phone, grab a snack, water my succulent, honestly anything but what I’ve set out to do. Of course, guilt quickly follows. Does that make me a bad person/student/programmer?&lt;/p&gt;

&lt;p&gt;No. &lt;strong&gt;Everyone experiences resistance to mentally or physically taxing labor to some extent.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;novel-stimuli&quot;&gt;Novel stimuli&lt;/h2&gt;

&lt;p&gt;The human brain is wired to  &lt;strong&gt;seek out novel stimuli&lt;/strong&gt;. It’s simply how we’ve stayed alive for so long. When a deer runs into the road while we’re driving, our attention instantly shifts to it, prompting us to act to avoid the danger. That same instinctual response to new and interesting things in our surroundings is what makes it so hard to get focused work done.&lt;/p&gt;

&lt;p&gt;Your mind is always on the lookout for something more interesting than what it’s currently honed in on. The same thing that keeps you alive is to blame for  &lt;em&gt;most&lt;/em&gt;  all procrastination.&lt;/p&gt;

&lt;h2 id=&quot;overcoming-it&quot;&gt;Overcoming It&lt;/h2&gt;

&lt;p&gt;There’s a careful balance necessary between work that is too boring and work that is too hard. If you can convince yourself that you’re interested in something, and work enough to understand it, all that’s left to do is devote your attention to it.&lt;/p&gt;

&lt;p&gt;Fortunately, there’s lots of things we can do to get into a flow state of hyper-focused attention easier. For me, it’s all about routine. When I set out to do truly deep work, I like to sit down with a drink (pop, tea, coffee, etc), put on some headphones, and get to work. I try not to sit at a desk with music and tea unless I’m doing work, so when I start that routine my mind already knows what’s about to happen.&lt;/p&gt;

&lt;p&gt;As with any skill,  &lt;strong&gt;practice works wonders&lt;/strong&gt;. 
Think of the time you spend focusing as an investment in any future time you need to focus. Each time it get’s a little easier to fight off distractions for just a little longer.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;This post was originally sent out on my newsletter, iOS By Night. If you want to see stuff like this when it first comes out, be sure to subscribe there!&lt;/p&gt;
&lt;iframe src=&quot;https://iosbynight.substack.com/embed&quot; width=&quot;100%&quot; height=&quot;320&quot; style=&quot;border:1px solid #EEE; background:white;&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Sun, 18 Oct 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/why-you-cant-focus/</link>
        <guid isPermaLink="true">http://localhost:4000/why-you-cant-focus/</guid>
        
        
        <category>Productivity</category>
        
        <category>College</category>
        
      </item>
    
      <item>
        <title>Switching From iPad to iPad Pro</title>
        <description>&lt;p&gt;I’ve been using an iPad for about 3 years, and I absolutely love it. Too often I hear tech-enthusiasts blast it as an underpowered toy computer for grandmothers — and &lt;em&gt;wow&lt;/em&gt; is that underselling it. For the most part, I’ve used my iPad as a leisure device. Since most of my work and education is done on a computer, it’s nice to feel a little separation when I want to unwind with something digital. The more I used it though, the more likely I was to reach for my iPad for professional tasks. When my college went 100% online back in March, it became a precious part of my workflow. Since I almost use my iPad more than my computer (except on workdays.. 8 hours of screen time is plenty), I made the jump over to the iPad pro.&lt;/p&gt;

&lt;p&gt;To be honest, there aren’t dozens of selling points to go with an iPad pro over the regular iPad, especially since the base iPad now supports Apple Pencil. But I’m still glad I did it! There are however inarguable improvements that make the iPad Pro a joy to own and use for leisure, work, and school.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;apple-pencil-2&quot;&gt;Apple Pencil 2&lt;/h3&gt;

&lt;p&gt;The Apple Pencil 2 is no doubt better than the original. For some reason, the base iPad is only comparable with the original Apple Pencil. They really listened to every complaint about their first generation pencil and solved pretty much all of them. For starters, this generation of the pencil magnetically attaches to the side of the iPad Pro for super convenient storage and &lt;strong&gt;charging&lt;/strong&gt;! Beyond that, the pencil is no longer &lt;em&gt;completely&lt;/em&gt; round. Since it sports one flat edge, the pencil is less prone to roll off the table onto the floor. You make think that’s a minor issue, but I can testify that my Apple Pencil 1 would roll onto the floor during a lecture at least a few times a week. In the “real” pencil world, you’d be hard pressed to find one that is completely round. Lastly, the pencil has a touch sensor, which apps can customize to allow actions (like tool switching) with just a tap on the side of the pencil.&lt;/p&gt;

&lt;h3 id=&quot;usb-c&quot;&gt;USB-C&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This right here&lt;/em&gt; is a crowd favorite. The original iPad (and every iPhone to date) charges with Apple’s proprietary “Lightning” connector. The iPad Pro on the other hand uses the ubiquitous “USB-C” connector that’s become popular on smartphones, computers (including MacBooks), and tablets around the world. Again, a very small but welcome improvement. If you’re wondering why it matters, I can now leave the house with my iPad and MacBook, and &lt;em&gt;1 cord to charge them both&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;screen-size&quot;&gt;Screen Size&lt;/h3&gt;

&lt;p&gt;The screen size and lack of bezel is the first thing you’ll notice if you put an iPad and a Pro next to each other. The iPad I switched from was a 10.2 inch, while the iPad Pro I switched to is an 11 inch. This doesn’t seem like a lot of difference on paper, but the trimmed bezel makes it feel like a whole different class of device. Combine this with the square edges (as opposed to rounded on the base iPad), and it’s easy to see the iPad Pro in a class of its own.&lt;/p&gt;

&lt;h3 id=&quot;display-quality&quot;&gt;Display Quality&lt;/h3&gt;

&lt;p&gt;The base level iPad sports 264 pixels per inch with 500 nits brightness. Meanwhile, the iPad Pro boasts 264 pixels per inch with 600 nits of brightness. The Pro’s display also comes with a fully laminated display with anti-reflective coating.&lt;/p&gt;

&lt;p&gt;So in less technical terms, the two iPads have the same resolution, but the Pro comes with an optionally brighter display that is also laminated and reduces glare. The difference here is marginal, but it’s definitely noticeable and worth mentioning.&lt;/p&gt;

&lt;h3 id=&quot;stereo-speakers&quot;&gt;Stereo Speakers&lt;/h3&gt;

&lt;p&gt;I actually had no idea of this until I was watching Netflix on the iPad Pro one evening. The base level iPad has some speakers on one end of it, and they’re nothing to write home about. (the reader may note that here I am, writing about it 🤷‍♂️). On the other hand, the Pro comes with 4 speakers. When holding it in landscape mode, there are &lt;em&gt;2 speakers on each side of the device.&lt;/em&gt; I can’t imagine taking much advantage of this serendipitous stereo discovery, but it’s another subtle difference that separates this iPad into its own class.&lt;/p&gt;

&lt;h3 id=&quot;face-id&quot;&gt;Face ID&lt;/h3&gt;

&lt;p&gt;The base level iPad comes with Touch ID, a fingerprint sensor used to unlock the iPad and authenticate for various transactions. But much like newer iPhones, the iPad Pro comes with Face ID, which lets you authenticate by just looking at the iPad. Am I lazy for loving this? Maybe, but it certainly makes using a password manager the easiest thing in the world.&lt;/p&gt;

&lt;h3 id=&quot;lidar&quot;&gt;LiDAR&lt;/h3&gt;

&lt;p&gt;No one really knows why LiDAR was included in this years revision of the iPad Pro, but no one is complaining. LiDAR is an additional sensor that acts like radar but uses lasers. Already, this enables the device to deliver next-generation augmented reality experiences. Not many apps take advantage of this yet, but consider this a future-proofing hardware enhancement. Already, apps like Ikea let you see how furniture would look in your house. While this experience is delivered on most iOS devices, the LiDAR sensor makes them darn close to flawless.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The iPad Pro definitely deserves it’s “Pro” name, even if it’s not obvious at first glance. All of these subtle improvements over the base model really pull together for a best-in-class experience. I definitely won’t tell you which iPad to buy, but I’m super happy with the Pro 😉&lt;/p&gt;

&lt;hr /&gt;
&lt;iframe src=&quot;https://iosbynight.substack.com/embed&quot; width=&quot;100%&quot; height=&quot;320&quot; style=&quot;border:1px solid #EEE; background:white;&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Sun, 13 Sep 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/switching-from-ipad-to-ipad-pro/</link>
        <guid isPermaLink="true">http://localhost:4000/switching-from-ipad-to-ipad-pro/</guid>
        
        
        <category>Products</category>
        
      </item>
    
      <item>
        <title>Switching To The Brave Browser</title>
        <description>&lt;p&gt;I’ve been using Chrome since around its release, but ditched it last year over privacy concerns. Google has a really big interest in having its eye on everything you do online so it can find a way to profit off of it, which was a little frustrating for me. After some experimenting, I ended up on Safari, which touted some pretty sweet privacy features, mostly in the area of blocking website’s attempts to follow you across the web. This worked out for a while, but I ended up having to keep Chrome installed, because &lt;em&gt;a shockingly high amount of websites only bother checking to make sure things work in Chrome.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The whole experience of trying to avoid Chrome has definitely been frustrating, but I’ve stuck to it mostly out of spite. A month or so ago, I discovered Brave, and have been loving it. It works and feels like Chrome, but protects your privacy like Firefox or Safari. Beyond that, it even has some decent ad-blocking features and an interesting method for ensuring creators continue to get paid.&lt;/p&gt;

&lt;p&gt;You should at least check it out, so here’s a few highlights to make it easier on you&lt;/p&gt;

&lt;h3 id=&quot;chromium&quot;&gt;Chromium&lt;/h3&gt;
&lt;p&gt;Chromium is a free, open source browser from Google itself 😱&lt;/p&gt;

&lt;p&gt;Chromium shouldn’t be confused with Chrome, which is one of Google’s most impressive pieces of spyware. Chromium is a bare-bones web browser that &lt;em&gt;anyone&lt;/em&gt; can expand upon. Google uses Chromium as the basis for Chrome, and Brave uses Chromium as the basis for itself!&lt;/p&gt;

&lt;p&gt;Sharing the engine with Chromium provides a ton of benefits. Let’s be honest — most of the world uses Chrome as it’s default browser. It’s gone so far as to become a meme that Safari/Edge are only used to install Chrome and then never touched again. The downside to this is that people who build websites, tend to make them work best on Chrome. I’ve had plenty of problems with websites in Safari, including Youtube and Netflix 😒&lt;/p&gt;

&lt;p&gt;Because Brave is built on the same skeleton that Chrome is, &lt;strong&gt;websites work as if you were using Chrome&lt;/strong&gt;. Even further, &lt;strong&gt;you can use Chrome Extensions!&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;ad-blocking&quot;&gt;Ad Blocking&lt;/h3&gt;

&lt;p&gt;Ad blocking is the thing that brings most people to the Brave browser. Brave blocks harmful ads that try to identify and track you across the internet. Yes you’ll still see ads, but you can expect them to be fewer and further between. When you do see an ad, it is far less likely to be trying to identify you at all costs.&lt;/p&gt;

&lt;p&gt;If you want, you can also opt-in to Brave’s custom ads. The company recognizes that advertisements enable creators to make content for everyone to enjoy, and just making advertisements vanish isn’t fair to everyone. You can choose to see occasional ads served up by the browser itself, and they will distribute a portion of the earnings from those advertisements to participating creators across the web. So if you spend all your time reading the New York Times, the idea is for that site to get all of the revenue generated by the advertisements you see.&lt;/p&gt;

&lt;h3 id=&quot;tracker-blocking&quot;&gt;Tracker Blocking&lt;/h3&gt;

&lt;p&gt;Beyond ad-blocking, Brave also blocks many attempts by websites to identify and exploit you. It starts by blocking fingerprinting techniques, which is where a website will collect as much information about you as possible, that it can identify your return visits even if you delete cookies and use a VPN. Brave goes one step further and stops cross-site cookies, which are yet another attempt for a website to observe your behavior &lt;em&gt;after you leave the website&lt;/em&gt; 😒&lt;/p&gt;

&lt;h3 id=&quot;private-browsing-with-tor&quot;&gt;Private Browsing With Tor&lt;/h3&gt;

&lt;p&gt;If you want, Brave will let you browse using &lt;a href=&quot;https://en.wikipedia.org/wiki/Tor_%28anonymity_network%29&quot;&gt;Tor&lt;/a&gt;, which is an open-source system for anonymous communication. In short, it works by routing requests through multiple servers and encrypting it each step of the way. Today it is maintained by its own non-profit, which states the following about it’s use -&amp;gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We, at the Tor Project, fight every day for everyone to have private access to an uncensored internet, and Tor has become the world’s strongest tool for privacy and freedom online.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Anyways, all that to say, Brave’s private browsing is a whole lot more private than Chrome’s “private” browsing. I’ve not actually used this feature though, as routing things through Tor slows your experience substantially.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;brave-is-a-browser-that-feels-and-acts-a-lot-like-chrome-but-lets-you-step-outside-the-google-ecosystem-and-retake-control-over-some-of-your-digital-footprint&quot;&gt;Brave is a browser that feels and acts a lot like Chrome, but lets you step outside the Google ecosystem and retake control over some of your digital footprint.&lt;/h4&gt;

&lt;hr /&gt;
&lt;iframe src=&quot;https://iosbynight.substack.com/embed&quot; width=&quot;100%&quot; height=&quot;320&quot; style=&quot;border:1px solid #EEE; background:white;&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Wed, 05 Aug 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/switching-to-the-brave-browser/</link>
        <guid isPermaLink="true">http://localhost:4000/switching-to-the-brave-browser/</guid>
        
        
        <category>Products</category>
        
      </item>
    
      <item>
        <title>My Favorite Productivity Tips</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;If a craftsman wants to do good work, he must first sharpen his tools. — Confucius&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In math words, productivity typically is units of output per unit of time. Talking about our own work that way makes us feel like machines, and is a bit too reductionist. When I think of productivity, I think about getting done what I &lt;em&gt;need&lt;/em&gt; to get done in time so that I can do what I &lt;em&gt;want&lt;/em&gt; to get done. However you define it, productivity matters to you whether you’re a student, knowledge worker, parent, landscaper, or anything in between.&lt;/p&gt;

&lt;p&gt;As a &lt;em&gt;freelancer&lt;/em&gt;, increasing my productivity has allowed me to increase the amount of money I can make per hour.&lt;/p&gt;

&lt;p&gt;As a &lt;em&gt;student&lt;/em&gt;, focusing on productivity ensures that I stay on top of my coursework while still enjoying the meaningful things in life, like walks in the woods with my girlfriend.&lt;/p&gt;

&lt;p&gt;So, I’ve compiled a list of my favorite productivity tips that I’ve discovered in the last few years, and I hope you find them as helpful as I have. — &lt;/p&gt;

&lt;h2 id=&quot;daily-highlight-&quot;&gt;Daily Highlight 🔍&lt;/h2&gt;

&lt;p&gt;This is concept is pretty new to me, and it comes from the book “Make Time” by Jake Knapp and John Zeratsky. They advocate for picking a single priority for the day and putting as much energy as possible into it. As someone who typically makes obsessively detailed lists for my days, this is a little bit odd to me — So of course I tried it out for myself.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1600/1*QR8pokk11W5EEBI0jOzgGA.jpeg&quot; alt=&quot;Reading “Make Time” with a view&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the book (which I cannot recommend enough), the authors explain that todo lists aren’t focused enough, and long term goals are too hard to measure progress towards. Whenever you sit down to do work, whatever that looks like for your occupation, you should &lt;strong&gt;write down the one thing that matters most to you for the time you’re about to spend.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’ve been doing this for about 2 weeks now, and it’s helped me in a few different ways. For one, it keeps me honest and focused on what matters most. I’m far less likely to get sucked into reading documentation when I know my highlight for the day is to “Finish Writing New Tests”. But beyond that, &lt;em&gt;it gives me greater satisfaction as I stop working for the day.&lt;/em&gt; Even if I miss some other todo items, it’s remarkably rewarding to set out what I accomplish to do.&lt;/p&gt;

&lt;p&gt;I definitely recommend setting a highlight at the beginning of your work/school times. If the concept interests you more, then you’d enjoy the book! &lt;em&gt;They don’t give me anything for saying that&lt;/em&gt; 🤷‍♂️&lt;/p&gt;

&lt;h2 id=&quot;deep-work-&quot;&gt;Deep Work 🤫&lt;/h2&gt;

&lt;p&gt;Cal Newport (there’s that name again 🤷‍♂️) says ‘Deep work’ is the ability to focus without distraction on a cognitively demanding task. He has a lot of things to say on the subject, so much so that he wrote a whole book about it. In the aptly titled “Deep Work” he argues that our constantly distracting digital tools stop us from getting meaningful work done in normal quantities.&lt;/p&gt;

&lt;p&gt;Essentially, the idea is that you do your best work when you’re completely focused on one thing for an extended period of time. If you say, need to write a 5 page paper, that’s deep work. Checking your email however, is “shallow work.” In the past, I’ve broken down tasks like writing a 5 page paper into small intervals to make it manageable, but this often leads to lost time and a lower quality product, as your brain is spending too much time going in and out of the deep work “zone.”&lt;/p&gt;

&lt;p&gt;The best way to approach something with deep work, is to schedule some time for it, a process called “time blocking,” and then focus on that thing, eliminating distractions like notifications or meetings.&lt;/p&gt;

&lt;p&gt;There’s a pretty cool startup called Clockwise that produces a tool that will automatically rearrange your meetings (and subsequently, your colleague’s calendars) to allow you as large of a contiguous block of free time as possible to get deep work done.&lt;/p&gt;

&lt;p&gt;Here’s my favorite blog post that explains more on deep work&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://doist.com/blog/deep-work/&quot;&gt;&lt;strong&gt;Deep Work: The Complete Guide (Including a Step-by-Step Checklist)&lt;/strong&gt; &lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;pomodoro-&quot;&gt;Pomodoro ⏰&lt;/h2&gt;

&lt;p&gt;Pomodoro is my go-to strategy for getting myself moving when I &lt;em&gt;really&lt;/em&gt; don’t want to. Inertia extends beyond a force of nature and into our professional lives. If we’re already really productive, it tends to be nice and easy to do the next task. If we’ve been slugging around for a while, it can become incredibly hard just to get moving on that first thing. However, once most people get started, they find that getting past that initial friction is all they needed.&lt;/p&gt;

&lt;p&gt;Pomodoro relies on the inertia rule of productivity to get things done in short intervals with breaks as a reward system. The idea is you set a work timer, typically for 25 minutes, and focus on one task for the entire period. Then, you take a 5 minute break to be a sloth again and repeat as needed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Work for 25 minutes, take a five minute break.&lt;/strong&gt; If you do this twice, you will have accomplished 50 minutes of high quality work in just 1 hour, which is a win no matter how you look at it. This technique conflicts a bit with the philosophy of deep work given it advocates for short time periods, but it does protect your attention while you work, which is an absolute must. Most importantly, it gets you over that initial friction from getting started. It’s really hard to convince yourself to study for 4 hours, but it’s really easy to convince yourself to study for 25 minutes 🤔&lt;/p&gt;

&lt;h2 id=&quot;regular-sleep-&quot;&gt;Regular Sleep 😴&lt;/h2&gt;

&lt;p&gt;Sleep can make you more productive. It always seems like sleep can be a waste of time, right? I mean, to sleep 8 hours a night, we spend 1/3rd of our life &lt;em&gt;unconscious&lt;/em&gt;. How can that be productive?&lt;/p&gt;

&lt;p&gt;Thinking of sleep that way is a bit too reductionist. While we sleep, our brain does the necessary work to decompress, rest, and shift things from short term to long term storage.&lt;/p&gt;

&lt;p&gt;Not to mention the negative effects on your well-being, if you don’t sleep enough, or you sleep inconsistently, you will surely suffer professionally. I’ve found that sleeping 7–8 hours a night, every night, helps me to feel focused and healthy, freeing me to do my best work and enjoy life without having to make too many sacrifices.&lt;/p&gt;

&lt;p&gt;Don’t look at sleep as a waste of time, but look at it as the best way to take care of yourself.&lt;/p&gt;

&lt;h2 id=&quot;task-management-&quot;&gt;Task Management 👨‍🔬&lt;/h2&gt;

&lt;p&gt;Entire books have been written about task management, and dozens of applications are out there to help refine it. &lt;strong&gt;The single greatest benefit of keeping things you want and need to do in a written or digital system is the bandwidth it frees up in your mind&lt;/strong&gt;. Whenever a thought pops into my head, something like “Get a mothers day card for mom”, I throw it into my task app and my mind is free to resume doing real work. It seems tiny, but the pressure of trying to remember your responsibilities, no matter how large, can cost you &lt;em&gt;tons&lt;/em&gt; of time.&lt;/p&gt;

&lt;p&gt;Any approach to keeping your tasks under control is better than no approach, but I tend to go as organized as possible. I prefer apps over paper, so that I can always access it, and it’s easy to move things around. Specifically, I use Todoist, &lt;a href=&quot;http://jeffmorhous.com/how-i-use-todoist-to-organize-my-life-as-a-student/&quot;&gt;which I’ve written a whole article about.&lt;/a&gt; I throw things into the app as they come into my head, and at the beginning of every week I refine things to make sure each day is manageable in workload. I use the priorities feature to single out my highlight, a nod to my newest tip above.&lt;/p&gt;

&lt;p&gt;Even if a todo app wouldn’t help you with your &lt;em&gt;job&lt;/em&gt;, it will help you with your &lt;em&gt;life&lt;/em&gt;. Wouldn’t it be nice to be known as dependable?&lt;/p&gt;

&lt;h2 id=&quot;unplug-&quot;&gt;Unplug 🔌&lt;/h2&gt;

&lt;p&gt;This one seems obvious to me. Our minds are constantly stimulated, a condition that we’ve only faced for the last few decades. In his book, “Digital Minimalism,” Cal Newport advocates for a simple life free of constant digital distraction. Now, you don’t have to take all his advice, but a big takeaway is the &lt;strong&gt;mental benefit you receive from doing something outside of screens&lt;/strong&gt;, especially if all your work is done on a screen. This means, after a long day at the computer, watching TV isn’t necessarily the best option for your noggin.&lt;/p&gt;

&lt;p&gt;Things like going on a walk, cooking, and investing in meaningful relationships all pay huge dividends on your productivity. We’re not built to work all the time, so if you let your work or low-quality leisure consume your life, you’ll find yourself struggling to compete with (and less happy than) your peers who take time to unplug.&lt;/p&gt;

&lt;p&gt;If the thought of unplugging makes you nervous, it’s a good sign your brain needs that break even more.&lt;/p&gt;

&lt;h2 id=&quot;reading-&quot;&gt;Reading 📖&lt;/h2&gt;

&lt;p&gt;Reading gives you superpowers, simple as that. If you make reading a regular habit, your attention span will increase and strengthen, alongside your rapidly growing reading speed. Beyond that, you also absorb information from whatever you happen to be reading.&lt;/p&gt;

&lt;p&gt;Plenty of successful people make reading a priority in their life. Warren Buffet is known to spend 5–6 hours a day reading, while Bill Gates is known to pour through 50 books a year. When asked about his reading, Buffet said,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Read 500 pages like this every day. That’s how knowledge works. It builds up, like compound interest. All of you can do it, but I guarantee not many of you will do it.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Reading is a wonderfully relaxing and rewarding hobby that will push you towards success faster than any other.&lt;/p&gt;

&lt;hr /&gt;
&lt;iframe src=&quot;https://iosbynight.substack.com/embed&quot; width=&quot;100%&quot; height=&quot;320&quot; style=&quot;border:1px solid #EEE; background:white;&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;I won’t spam you, promise 🤝&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/my-favorite-productivity-tips/</link>
        <guid isPermaLink="true">http://localhost:4000/my-favorite-productivity-tips/</guid>
        
        
        <category>College</category>
        
        <category>Productivity</category>
        
      </item>
    
      <item>
        <title>How To Give Your ViewController An Activity Indicator</title>
        <description>&lt;p&gt;UIKit provides a nifty little spinning wheel we can display to the user when we’re waiting on something that the user can’t see. It’s considered a best practice to pop one of these up when doing something like a network call, so the person using our app isn’t clueless as to what’s going on. Basically, you create the spinner, and add it to your view. Then, just before a background task like an API request, tell it to animate. When the background request finishes, you just tell it to stop animating.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First, declare your spinner in the ViewController&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;var activityIndicator = UIActivityIndicatorView(style: .Large)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Inside viewDidLoad, or a method called by viewDidLoad, add the spinner to your view&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;activityIndicator.translatesAutoresizingMaskIntoConstraints = false
view.addSubview(activityIndicator)
activityIndicator.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive = true
activityIndicator.centerYAnchor.constraint(equalTo: view.centerYAnchor).isActive = **true**
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Before you make your background task, start the spinner&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;activityIndicator.startAnimating()
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;And when the background task completes, stop the spinner!&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;self.activityIndicator.stopAnimating()
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;This is such a small UI feature that has a huge benefit. If you implement it correctly, the people that use your app will probably never consciously notice it. But if you don’t implement this, users will likely feel like your app is slow, or mistake a normal wait time for a buggy freeze of the app. Hope you got some value out of this, I know your users will!&lt;/p&gt;

&lt;hr /&gt;
&lt;iframe src=&quot;https://iosbynight.substack.com/embed&quot; width=&quot;100%&quot; height=&quot;320&quot; style=&quot;border:1px solid #EEE; background:white;&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Tue, 14 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/how-to-give-your-viewcontroller-an-activityindicator/</link>
        <guid isPermaLink="true">http://localhost:4000/how-to-give-your-viewcontroller-an-activityindicator/</guid>
        
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>How To Customize UITextView</title>
        <description>&lt;p&gt;So recently I’ve been working on an iOS version of my Mock My Words app. It’s pretty simple in functionality so I wanted to compensate with a nice user interface. The main functionality requires that a user enter (or paste) in text of pretty much any size. Oftentimes iOS text entry with a  &lt;strong&gt;UITextField&lt;/strong&gt;, but that only offers single line input. For multi-line input, you have to use  &lt;strong&gt;UITextView&lt;/strong&gt;  😔. After throwing that in my app I was rather unimpressed with how it looked. So, I decided to put my own spin on it. It took a bit of research and I’m pleased with how it turned out so I thought I’d share with the community on how customize the UITextView object to your own needs.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;create-the-uitextview&quot;&gt;Create the UITextView&lt;/h2&gt;

&lt;p&gt;I’m building this app programmatically, so the first step is to instantiate the UITextView object. If you’re using a storyboard, you’ll want to create an IBOutlet and then follow the other steps the same. I declared my UITextView at the class level of the view controller it’s used in, and the one-line looks like&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    **let** textBox = UITextView()
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Please note, all of the following code should be executed by  &lt;em&gt;viewdidload()&lt;/em&gt;&lt;/strong&gt;, but feel free to extract it to a function and then call that function from viewDidLoad()&lt;/p&gt;

&lt;h2 id=&quot;add-it-to-the-view&quot;&gt;Add it to the view&lt;/h2&gt;

&lt;p&gt;Next, you have to add it to the view hierarchy so it actually shows up. If you’re using a storyboard, skip this step.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    view.addSubview(textBox)textBox.translatesAutoresizingMaskIntoConstraints = **false**
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;set-the-delegate&quot;&gt;Set the delegate&lt;/h2&gt;

&lt;p&gt;If you actually want your app to react to actions the user may take, you need to make your view controller extend UITextViewDelegate, and then have the following line in your configuration.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    textBox.delegate = **self**
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;customize-the-textbox&quot;&gt;Customize the textbox&lt;/h2&gt;

&lt;p&gt;You can use creative freedom here, but here’s how I laid out my textbox view.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    textBox.autocorrectionType = .no
    textBox.text = placeholderText
    textBox.backgroundColor = .secondarySystemBackground
    textBox.textColor = .secondaryLabel
    textBox.font = UIFont.preferredFont(forTextStyle: .body)
    textBox.layer.cornerRadius = 20
    textBox.textContainerInset = UIEdgeInsets(top: 10, left: 10, bottom: 10, right: 10)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;give-it-a-shadow&quot;&gt;Give it a shadow&lt;/h2&gt;

&lt;p&gt;Again, this is optional, but this is how I gave my textbox a shadow so it has a material design feel.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    textBox.layer.shadowColor = UIColor.gray.cgColor;
    textBox.layer.shadowOffset = CGSize(width: 0.75, height: 0.75)
    textBox.layer.shadowOpacity = 0.4
    textBox.layer.shadowRadius = 20
    textBox.layer.masksToBounds = **false**
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tell-your-view-where-to-put-it&quot;&gt;Tell your view where to put it&lt;/h2&gt;

&lt;p&gt;Your method for doing this will definitely vary, but I used&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;    NSLayoutConstraint.activate([insert your array of constraints here])
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that’s it! You have a custom textbox that kind of floats above the view you put it in.&lt;/p&gt;

&lt;hr /&gt;
&lt;iframe src=&quot;https://iosbynight.substack.com/embed&quot; width=&quot;100%&quot; height=&quot;320&quot; style=&quot;border:1px solid #EEE; background:white;&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Fri, 15 May 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/how-to-customize-uitextview/</link>
        <guid isPermaLink="true">http://localhost:4000/how-to-customize-uitextview/</guid>
        
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>How to Set Up Programmatic Interfaces in iOS</title>
        <description>&lt;p&gt;There are plenty of valid reasons to use storyboards or to programmatically lay out your interface. Storyboards let us quickly build out a beautiful interface, but face limitations and scale problems. If you have a team working on an app, then Storyboards can get messy and hard to keep track of with version control. Once you decide that storyboards aren’t the tool for you, Xcode takes some tinkering to set things up to lay out your interface in Swift. After you create your project,&lt;/p&gt;

&lt;p&gt;First,  &lt;strong&gt;delete&lt;/strong&gt;  the  &lt;em&gt;Main.storyboard.&lt;/em&gt; Yup, delete it entirely.&lt;/p&gt;

&lt;p&gt;Then, we have to delete any reference to it- The first spot we need to take care of is the reference to  &lt;em&gt;Main.storyboard&lt;/em&gt;  in  &lt;em&gt;Info.plist&lt;/em&gt; — Go ahead and  &lt;strong&gt;delete the entry by clicking the minus sign&lt;/strong&gt;. The last place it’s referenced is in the  &lt;em&gt;Deployment Info&lt;/em&gt; section of your project settings. A dropdown for  &lt;em&gt;Main Interface&lt;/em&gt;  will still say Main.storyboard,  &lt;strong&gt;Select the empty option in the dropdown&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Next, add the following to your SceneDelegate.swift&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;guard let windowScene = (scene as? UIWindowScene) else { return }
window = UIWindow(frame: windowScene.coordinateSpace.bounds)
window?.windowScene = windowScene
window?.rootViewController = ViewController()
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, you can specify your actual layout in ViewController.swift!&lt;/p&gt;

&lt;p&gt;You’re all set up to implement the design of your dreams programmatically, and  &lt;a href=&quot;https://softauthor.com/ios-ui-design-programmatically-xcode-9-swift-4&quot;&gt;here’s a quick reference to help you get the hang of it&lt;/a&gt;!&lt;/p&gt;

&lt;hr /&gt;
&lt;iframe src=&quot;https://iosbynight.substack.com/embed&quot; width=&quot;100%&quot; height=&quot;320&quot; style=&quot;border:1px solid #EEE; background:white;&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Mon, 13 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/how-to-set-up-programmatic-interfaces-in-ios/</link>
        <guid isPermaLink="true">http://localhost:4000/how-to-set-up-programmatic-interfaces-in-ios/</guid>
        
        
        <category>Tutorial</category>
        
      </item>
    
      <item>
        <title>How to Wirelessly Test Your App on Your iPhone</title>
        <description>&lt;p&gt;A good thing to note is that the mac you are using Xcode on and the iPhone (or iPad) you want to test on  &lt;strong&gt;must be on the same network&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Next to the build button, go to select a device/simulator. Here, mine just says “&lt;em&gt;Generic iOS Device&lt;/em&gt;”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/2284/1*4iGsUqTlI2w8rJ5ILnOBOw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you click on it, select “&lt;em&gt;Add Additional Simulators&lt;/em&gt;” The result will be a modal that looks like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/3204/1*f5VkFuTfSE0pNmhsdPXmAA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Go ahead and switch over to devices. Plug your device in and unlock it, and it should appear.&lt;/p&gt;

&lt;p&gt;Go ahead and click the checkbox that says “&lt;em&gt;Connect via network&lt;/em&gt;” and voila!&lt;/p&gt;

&lt;p&gt;You may have to restart Xcode, but you should now be able to run your apps on your device without physically connecting it!&lt;/p&gt;

&lt;p&gt;This is a pretty small trick but it may save you tons of time, and honestly it’s just too cool not to set up. Hope this helped, and if you ran in to trouble, let me know below!&lt;/p&gt;

&lt;hr /&gt;
&lt;iframe src=&quot;https://iosbynight.substack.com/embed&quot; width=&quot;100%&quot; height=&quot;320&quot; style=&quot;border:1px solid #EEE; background:white;&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Fri, 03 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/how-to-wirelessly-test-your-app-on-your-iphone/</link>
        <guid isPermaLink="true">http://localhost:4000/how-to-wirelessly-test-your-app-on-your-iphone/</guid>
        
        
        <category>Tutorial</category>
        
      </item>
    
  </channel>
</rss>
